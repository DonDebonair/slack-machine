[tool.poetry]
name = "slack-machine"
version = "0.36.0"
description = "A wonderful, simple, yet powerful and extendable Slack bot framework"
authors = ["Daan Debie <daan@dv.email>"]
license = "MIT"
repository = "https://github.com/DonDebonair/slack-machine"
homepage = "https://github.com/DonDebonair/slack-machine"
documentation = "https://DonDebonair.github.io/slack-machine/"
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Communications :: Chat",
    "Topic :: Internet",
    "Topic :: Office/Business"
]
packages = [
    { include = "machine" },
]
include = ["extra/logo.png", "run_dev.py", "README.md", "CHANGELOG.md", "LICENSE", "AUTHORS"]

[tool.poetry.dependencies]
python = "^3.8"
"backports.zoneinfo" = { version = "^0.2.1", python = "<3.9" }
dill = "^0.3.5.1"
APScheduler = "^3.9.1"
redis = {version = ">=4.3.4,<6.0.0", optional = true}
hiredis = {version = "^2.0.0", optional = true}
slack-sdk = "^3.18.1"
aiohttp = "^3.8.5"
pyee = ">=9.0.4,<12.0.0"
httpx = ">=0.23,<0.28"
aioboto3 = {version = ">=10,<13", optional = true}
tzdata = ">=2022.2,<2025.0"
pydantic = "^2.2.1"
structlog = ">=22.1,<25.0"
aiosqlite = {version = ">=0.18,<0.21", optional = true}
multidict = "^6.0.5"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = ">=7.1.3,<9.0.0"
pytest-mock = "^3.10.0"
tox = "^3.26.0"
tox-gh-actions = "^2.10.0"
coverage = ">=6.5,<8.0"
redis = ">=4.3.4,<6.0.0"
pre-commit = ">=2.20,<4.0"
pyyaml = "^6.0.1"
pytest-cov = ">=4,<6"
typing-extensions = "^4.4.0"
pytest-asyncio = ">=0.19,<0.24"
mock = ">=4.0.3,<6.0.0"
mypy = ">=0.982,<1.11"
types-redis = "^4.3.21"
aioboto3 = ">=10,<13"
types-aiobotocore = {extras = ["essential"], version = "^2.4.0"}
aiosqlite = ">=0.18,<0.21"
ruff = "^0.4.3"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocstrings = {extras = ["python"], version = ">=0.19,<0.26"}
mkdocs-material = ">=8.5.10,<10.0.0"

[tool.poetry.extras]
redis = ["redis", "hiredis"]
dynamodb = ["aioboto3"]
sqlite = ["aiosqlite"]

[tool.poetry.scripts]
slack-machine = 'machine.bin.run:main'

[tool.ruff]
line-length = 120

[tool.ruff.lint]
exclude = [
    ".git",
    ".tox",
    ".eggs",
    "docs",
    "__pycache__",
    "dist",
    "build",
    "tests",
]
ignore = []
select = [
    "E",
    "F",
    "W",
    # isort
    "I",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
#    # flake8-simplify
    "SIM",
]

[tool.ruff.lint.isort]
known-first-party = ["machine", "tests"]

[tool.ruff.format]
preview = true

[tool.pytest.ini_options]
mock_use_standalone_module = true
addopts = "--verbose --cov-report term-missing --cov-report xml --junit-xml pytest.xml --cov=machine"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
show_column_numbers = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
