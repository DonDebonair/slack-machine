[[package]]
name = "aioboto3"
version = "10.0.0"
description = "Async boto3 wrapper"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
aiobotocore = {version = "2.3.4", extras = ["boto3"]}

[package.extras]
chalice = ["chalice (>=1.24.0)"]
s3cse = ["cryptography (>=2.3.1)"]

[[package]]
name = "aiobotocore"
version = "2.3.4"
description = "Async client for aws services using botocore and aiohttp"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiohttp = ">=3.3.1"
aioitertools = ">=0.5.1"
boto3 = {version = ">=1.21.21,<1.21.22", optional = true, markers = "extra == \"boto3\""}
botocore = ">=1.24.21,<1.24.22"
wrapt = ">=1.10.10"

[package.extras]
boto3 = ["boto3 (>=1.21.21,<1.21.22)"]
awscli = ["awscli (>=1.22.76,<1.22.77)"]

[[package]]
name = "aiohttp"
version = "3.8.1"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
asynctest = {version = "0.13.0", markers = "python_version < \"3.8\""}
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
typing-extensions = {version = ">=3.7.4", markers = "python_version < \"3.8\""}
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["cchardet", "brotli", "aiodns"]

[[package]]
name = "aioitertools"
version = "0.10.0"
description = "itertools and builtins for AsyncIO and mixed iterables"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing_extensions = {version = ">=4.0", markers = "python_version < \"3.10\""}

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "anyio"
version = "3.6.1"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
trio = ["trio (>=0.16)"]
test = ["uvloop (>=0.15)", "mock (>=4)", "uvloop (<0.15)", "contextlib2", "trustme", "pytest-mock (>=3.6.1)", "pytest (>=7.0)", "hypothesis (>=4.0)", "coverage[toml] (>=4.5)"]
doc = ["sphinx-autodoc-typehints (>=1.2.0)", "sphinx-rtd-theme", "packaging"]

[[package]]
name = "apscheduler"
version = "3.9.1"
description = "In-process task scheduler with Cron-like capabilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.dependencies]
pytz = "*"
six = ">=1.4.0"
tzlocal = ">=2.0,<3.0.0 || >=4.0.0"

[package.extras]
zookeeper = ["kazoo"]
twisted = ["twisted"]
tornado = ["tornado (>=4.3)"]
testing = ["pytest-asyncio", "pytest-asyncio (<0.6)", "mock", "pytest-tornado5", "pytest-cov", "pytest"]
sqlalchemy = ["sqlalchemy (>=0.8)"]
rethinkdb = ["rethinkdb (>=2.4.0)"]
redis = ["redis (>=3.0)"]
mongodb = ["pymongo (>=3.0)"]
gevent = ["gevent"]
doc = ["sphinx-rtd-theme", "sphinx"]
asyncio = ["trollius"]

[[package]]
name = "args"
version = "0.1.0"
description = "Command Arguments for Humans."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.6.5", markers = "python_version < \"3.8\""}

[[package]]
name = "asynctest"
version = "0.13.0"
description = "Enhance the standard unittest package with features for testing asyncio libraries"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
tests_no_zope = ["cloudpickle", "pytest-mypy-plugins", "mypy (>=0.900,!=0.940)", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
tests = ["cloudpickle", "zope.interface", "pytest-mypy-plugins", "mypy (>=0.900,!=0.940)", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
docs = ["sphinx-notfound-page", "zope.interface", "sphinx", "furo"]
dev = ["cloudpickle", "pre-commit", "sphinx-notfound-page", "sphinx", "furo", "zope.interface", "pytest-mypy-plugins", "mypy (>=0.900,!=0.940)", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]

[[package]]
name = "backports.zoneinfo"
version = "0.2.1"
description = "Backport of the standard library zoneinfo module"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
tzdata = ["tzdata"]

[[package]]
name = "black"
version = "22.6.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_full_version < \"3.11.0a7\""}
typed-ast = {version = ">=1.4.2", markers = "python_version < \"3.8\" and implementation_name == \"cpython\""}
typing-extensions = {version = ">=3.10.0.0", markers = "python_version < \"3.10\""}

[package.extras]
uvloop = ["uvloop (>=0.15.2)"]
jupyter = ["tokenize-rt (>=3.2.0)", "ipython (>=7.8.0)"]
d = ["aiohttp (>=3.7.4)"]
colorama = ["colorama (>=0.4.3)"]

[[package]]
name = "blinker-alt"
version = "1.5"
description = "Fast, simple object-to-object and broadcast signaling"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "boto3"
version = "1.21.21"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
botocore = ">=1.24.21,<1.25.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.5.0,<0.6.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "botocore"
version = "1.24.21"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.13.5)"]

[[package]]
name = "botocore-stubs"
version = "1.27.61"
description = "Type annotations and code completion for botocore"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
types-awscrt = "*"

[[package]]
name = "cached-property"
version = "1.5.2"
description = "A decorator for caching properties in classes."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "certifi"
version = "2022.6.15"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cfgv"
version = "3.3.1"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "charset-normalizer"
version = "2.1.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.1.3"
description = "Composable command line interface toolkit"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
name = "clint"
version = "0.5.1"
description = "Python Command Line Interface Tools"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
args = "*"

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "coverage"
version = "6.4.4"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tomli = {version = "*", optional = true, markers = "python_full_version <= \"3.11.0a6\" and extra == \"toml\""}

[package.extras]
toml = ["tomli"]

[[package]]
name = "dacite"
version = "1.6.0"
description = "Simple creation of data classes from dictionaries."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["pylint", "mypy", "black", "coveralls", "pytest-cov", "pytest (>=5)"]

[[package]]
name = "deprecated"
version = "1.2.13"
description = "Python @deprecated decorator to deprecate old python classes, functions or methods."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
wrapt = ">=1.10,<2"

[package.extras]
dev = ["tox", "bump2version (<1)", "sphinx (<2)", "importlib-metadata (<3)", "importlib-resources (<4)", "configparser (<5)", "sphinxcontrib-websupport (<2)", "zipp (<2)", "PyTest (<5)", "PyTest-Cov (<2.6)", "pytest", "pytest-cov"]

[[package]]
name = "dill"
version = "0.3.5.1"
description = "serialize all of python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "distlib"
version = "0.3.6"
description = "Distribution utilities"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "filelock"
version = "3.8.0"
description = "A platform independent file lock."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2022.6.21)", "sphinx (>=5.1.1)", "sphinx-autodoc-typehints (>=1.19.1)"]
testing = ["covdefaults (>=2.2)", "coverage (>=6.4.2)", "pytest (>=7.1.2)", "pytest-cov (>=3)", "pytest-timeout (>=2.1)"]

[[package]]
name = "flake8"
version = "3.9.2"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.7.0,<2.8.0"
pyflakes = ">=2.3.0,<2.4.0"

[[package]]
name = "frozenlist"
version = "1.3.1"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "ghp-import"
version = "2.1.0"
description = "Copy your docs directly to the gh-pages branch."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = ">=2.8.1"

[package.extras]
dev = ["wheel", "flake8", "markdown", "twine"]

[[package]]
name = "griffe"
version = "0.22.0"
description = "Signatures for entire Python programs. Extract the structure, the frame, the skeleton of your project, to generate API documentation or find breaking changes in your API."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cached-property = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
async = ["aiofiles (>=0.7,<1.0)"]

[[package]]
name = "h11"
version = "0.12.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "hiredis"
version = "2.0.0"
description = "Python wrapper for hiredis"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "httpcore"
version = "0.15.0"
description = "A minimal low-level HTTP client."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyio = ">=3.0.0,<4.0.0"
certifi = "*"
h11 = ">=0.11,<0.13"
sniffio = ">=1.0.0,<2.0.0"

[package.extras]
socks = ["socksio (>=1.0.0,<2.0.0)"]
http2 = ["h2 (>=3,<5)"]

[[package]]
name = "httpx"
version = "0.23.0"
description = "The next generation HTTP client."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = "*"
httpcore = ">=0.15.0,<0.16.0"
rfc3986 = {version = ">=1.3,<2", extras = ["idna2008"]}
sniffio = "*"

[package.extras]
socks = ["socksio (>=1.0.0,<2.0.0)"]
http2 = ["h2 (>=3,<5)"]
cli = ["pygments (>=2.0.0,<3.0.0)", "rich (>=10,<13)", "click (>=8.0.0,<9.0.0)"]
brotli = ["brotli", "brotlicffi"]

[[package]]
name = "identify"
version = "2.5.3"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "4.12.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.3)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "5.9.0"
description = "Read resources from Python packages"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "isort"
version = "5.10.1"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.6.1,<4.0"

[package.extras]
plugins = ["setuptools"]
colors = ["colorama (>=0.4.3,<0.5.0)"]
requirements_deprecated_finder = ["pip-api", "pipreqs"]
pipfile_deprecated_finder = ["requirementslib", "pipreqs"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "markdown"
version = "3.3.7"
description = "Python implementation of Markdown."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}

[package.extras]
testing = ["coverage", "pyyaml"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mccabe"
version = "0.6.1"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "mergedeep"
version = "1.3.4"
description = "A deep merge function for 🐍."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mkdocs"
version = "1.3.1"
description = "Project documentation with Markdown."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
click = ">=3.3"
ghp-import = ">=1.0"
importlib-metadata = ">=4.3"
Jinja2 = ">=2.10.2"
Markdown = ">=3.2.1,<3.4"
mergedeep = ">=1.3.4"
packaging = ">=20.5"
PyYAML = ">=3.10"
pyyaml-env-tag = ">=0.1"
watchdog = ">=2.0"

[package.extras]
i18n = ["babel (>=2.9.0)"]

[[package]]
name = "mkdocs-autorefs"
version = "0.4.1"
description = "Automatically link across pages in MkDocs."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Markdown = ">=3.3"
mkdocs = ">=1.1"

[[package]]
name = "mkdocs-material"
version = "8.4.2"
description = "Documentation that simply works"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
jinja2 = ">=3.0.2"
markdown = ">=3.2"
mkdocs = ">=1.3.0"
mkdocs-material-extensions = ">=1.0.3"
pygments = ">=2.12"
pymdown-extensions = ">=9.4"

[[package]]
name = "mkdocs-material-extensions"
version = "1.0.3"
description = "Extension pack for Python Markdown."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mkdocstrings"
version = "0.19.0"
description = "Automatic documentation from sources, for MkDocs."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Jinja2 = ">=2.11.1"
Markdown = ">=3.3"
MarkupSafe = ">=1.1"
mkdocs = ">=1.2"
mkdocs-autorefs = ">=0.3.1"
mkdocstrings-python = {version = ">=0.5.2", optional = true, markers = "extra == \"python\""}
pymdown-extensions = ">=6.3"

[package.extras]
crystal = ["mkdocstrings-crystal (>=0.3.4)"]
python = ["mkdocstrings-python (>=0.5.2)"]
python-legacy = ["mkdocstrings-python-legacy (>=0.2.1)"]

[[package]]
name = "mkdocstrings-python"
version = "0.7.1"
description = "A Python handler for mkdocstrings."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
griffe = ">=0.11.1"
mkdocstrings = ">=0.19"

[[package]]
name = "mock"
version = "4.0.3"
description = "Rolling backport of unittest.mock for all Pythons"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
build = ["twine", "wheel", "blurb"]
docs = ["sphinx"]
test = ["pytest (<5.4)", "pytest-cov"]

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mypy"
version = "0.971"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
mypy-extensions = ">=0.4.3"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
typed-ast = {version = ">=1.4.0,<2", markers = "python_version < \"3.8\""}
typing-extensions = ">=3.10"

[package.extras]
dmypy = ["psutil (>=4.0)"]
python2 = ["typed-ast (>=1.4.0,<2)"]
reports = ["lxml"]

[[package]]
name = "mypy-extensions"
version = "0.4.3"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "nodeenv"
version = "1.7.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pathspec"
version = "0.9.0"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "platformdirs"
version = "2.5.2"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)", "pytest-mock (>=3.6)", "pytest-cov (>=2.7)", "appdirs (==1.4.4)"]
docs = ["sphinx (>=4)", "sphinx-autodoc-typehints (>=1.12)", "proselint (>=0.10.2)", "furo (>=2021.7.5b38)"]

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "pre-commit"
version = "2.20.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
toml = "*"
virtualenv = ">=20.0.8"

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycodestyle"
version = "2.7.0"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pyee"
version = "9.0.4"
description = "A port of node.js's EventEmitter to python."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
typing-extensions = "*"

[[package]]
name = "pyflakes"
version = "2.3.1"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pygments"
version = "2.13.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
plugins = ["importlib-metadata"]

[[package]]
name = "pymdown-extensions"
version = "9.5"
description = "Extension pack for Python Markdown."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
markdown = ">=3.2"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pytest"
version = "7.1.2"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]

[[package]]
name = "pytest-asyncio"
version = "0.19.0"
description = "Pytest support for asyncio"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=6.1.0"
typing-extensions = {version = ">=3.7.2", markers = "python_version < \"3.8\""}

[package.extras]
testing = ["coverage (>=6.2)", "hypothesis (>=5.7.1)", "flaky (>=3.5.0)", "mypy (>=0.931)", "pytest-trio (>=0.7.0)"]

[[package]]
name = "pytest-cov"
version = "3.0.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["virtualenv", "pytest-xdist", "six", "process-tests", "hunter", "fields"]

[[package]]
name = "pytest-mock"
version = "3.8.2"
description = "Thin-wrapper around the mock package for easier use with pytest"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "tox", "pytest-asyncio"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2022.2.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pytz-deprecation-shim"
version = "0.1.0.post0"
description = "Shims to make deprecation of pytz easier"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
"backports.zoneinfo" = {version = "*", markers = "python_version >= \"3.6\" and python_version < \"3.9\""}
tzdata = {version = "*", markers = "python_version >= \"3.6\""}

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyyaml-env-tag"
version = "0.1"
description = "A custom YAML tag for referencing environment variables in YAML files. "
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyyaml = "*"

[[package]]
name = "redis"
version = "4.3.4"
description = "Python client for Redis database and key-value store"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
async-timeout = ">=4.0.2"
deprecated = ">=1.2.3"
importlib-metadata = {version = ">=1.0", markers = "python_version < \"3.8\""}
packaging = ">=20.4"
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
hiredis = ["hiredis (>=1.0.0)"]
ocsp = ["cryptography (>=36.0.1)", "pyopenssl (==20.0.1)", "requests (>=2.26.0)"]

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]

[[package]]
name = "rfc3986"
version = "1.5.0"
description = "Validating URI References per RFC 3986"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
idna = {version = "*", optional = true, markers = "extra == \"idna2008\""}

[package.extras]
idna2008 = ["idna"]

[[package]]
name = "s3transfer"
version = "0.5.2"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "slack-sdk"
version = "3.18.1"
description = "The Slack API Platform SDK for Python"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
testing = ["moto (>=3,<4)", "boto3 (<=2)", "databases (>=0.5)", "psutil (>=5,<6)", "click (==8.0.4)", "black (==22.3.0)", "flake8 (>=4,<5)", "codecov (>=2,<3)", "pytest-cov (>=2,<3)", "Jinja2 (==3.0.3)", "itsdangerous (==1.1.0)", "Werkzeug (<2)", "Flask (>=1,<2)", "Flask-Sockets (>=0.2,<1)", "pytest-asyncio (<1)", "pytest (>=6.2.5,<7)"]
optional = ["websocket-client (>=1,<2)", "websockets (>=10,<11)", "SQLAlchemy (>=1,<2)", "boto3 (<=2)", "aiohttp (>=3.7.3,<4)", "aiodns (>1.0)"]

[[package]]
name = "sniffio"
version = "1.2.0"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "dev"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tox"
version = "3.25.1"
description = "tox is a generic virtualenv management and test command line tool"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
colorama = {version = ">=0.4.1", markers = "platform_system == \"Windows\""}
filelock = ">=3.0.0"
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
packaging = ">=14"
pluggy = ">=0.12.0"
py = ">=1.4.17"
six = ">=1.14.0"
toml = ">=0.9.4"
virtualenv = ">=16.0.0,<20.0.0 || >20.0.0,<20.0.1 || >20.0.1,<20.0.2 || >20.0.2,<20.0.3 || >20.0.3,<20.0.4 || >20.0.4,<20.0.5 || >20.0.5,<20.0.6 || >20.0.6,<20.0.7 || >20.0.7"

[package.extras]
docs = ["pygments-github-lexers (>=0.0.5)", "sphinx (>=2.0.0)", "sphinxcontrib-autoprogram (>=0.1.5)", "towncrier (>=18.5.0)"]
testing = ["flaky (>=3.4.0)", "freezegun (>=0.3.11)", "pytest (>=4.0.0)", "pytest-cov (>=2.5.1)", "pytest-mock (>=1.10.0)", "pytest-randomly (>=1.0.0)", "psutil (>=5.6.1)", "pathlib2 (>=2.3.3)"]

[[package]]
name = "tox-gh-actions"
version = "2.9.1"
description = "Seamless integration of tox into GitHub Actions"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
importlib-resources = "*"
tox = ">=3.12,<4"

[package.extras]
testing = ["coverage (<6)", "flake8 (>=3,<4)", "pytest-cov (>=2,<3)", "pytest-mock (>=2,<3)", "black", "pytest (>=4,<7)", "pytest (>=6.2.5,<7)", "pytest-randomly (>=3)"]

[[package]]
name = "typed-ast"
version = "1.5.4"
description = "a fork of Python 2 and 3 ast modules with type comment support"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "types-aiobotocore"
version = "2.4.0"
description = "Type annotations for aiobotocore 2.4.0 generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
botocore-stubs = "*"
types-aiobotocore-cloudformation = {version = ">=2.4.0,<2.5.0", optional = true, markers = "extra == \"essential\""}
types-aiobotocore-dynamodb = {version = ">=2.4.0,<2.5.0", optional = true, markers = "extra == \"essential\""}
types-aiobotocore-ec2 = {version = ">=2.4.0,<2.5.0", optional = true, markers = "extra == \"essential\""}
types-aiobotocore-lambda = {version = ">=2.4.0,<2.5.0", optional = true, markers = "extra == \"essential\""}
types-aiobotocore-rds = {version = ">=2.4.0,<2.5.0", optional = true, markers = "extra == \"essential\""}
types-aiobotocore-s3 = {version = ">=2.4.0,<2.5.0", optional = true, markers = "extra == \"essential\""}
types-aiobotocore-sqs = {version = ">=2.4.0,<2.5.0", optional = true, markers = "extra == \"essential\""}
typing-extensions = ">=4.1.0"

[package.extras]
accessanalyzer = ["types-aiobotocore-accessanalyzer (>=2.4.0,<2.5.0)"]
account = ["types-aiobotocore-account (>=2.4.0,<2.5.0)"]
acm = ["types-aiobotocore-acm (>=2.4.0,<2.5.0)"]
acm-pca = ["types-aiobotocore-acm-pca (>=2.4.0,<2.5.0)"]
alexaforbusiness = ["types-aiobotocore-alexaforbusiness (>=2.4.0,<2.5.0)"]
all = ["types-aiobotocore-accessanalyzer (>=2.4.0,<2.5.0)", "types-aiobotocore-account (>=2.4.0,<2.5.0)", "types-aiobotocore-acm (>=2.4.0,<2.5.0)", "types-aiobotocore-acm-pca (>=2.4.0,<2.5.0)", "types-aiobotocore-alexaforbusiness (>=2.4.0,<2.5.0)", "types-aiobotocore-amp (>=2.4.0,<2.5.0)", "types-aiobotocore-amplify (>=2.4.0,<2.5.0)", "types-aiobotocore-amplifybackend (>=2.4.0,<2.5.0)", "types-aiobotocore-amplifyuibuilder (>=2.4.0,<2.5.0)", "types-aiobotocore-apigateway (>=2.4.0,<2.5.0)", "types-aiobotocore-apigatewaymanagementapi (>=2.4.0,<2.5.0)", "types-aiobotocore-apigatewayv2 (>=2.4.0,<2.5.0)", "types-aiobotocore-appconfig (>=2.4.0,<2.5.0)", "types-aiobotocore-appconfigdata (>=2.4.0,<2.5.0)", "types-aiobotocore-appflow (>=2.4.0,<2.5.0)", "types-aiobotocore-appintegrations (>=2.4.0,<2.5.0)", "types-aiobotocore-application-autoscaling (>=2.4.0,<2.5.0)", "types-aiobotocore-application-insights (>=2.4.0,<2.5.0)", "types-aiobotocore-applicationcostprofiler (>=2.4.0,<2.5.0)", "types-aiobotocore-appmesh (>=2.4.0,<2.5.0)", "types-aiobotocore-apprunner (>=2.4.0,<2.5.0)", "types-aiobotocore-appstream (>=2.4.0,<2.5.0)", "types-aiobotocore-appsync (>=2.4.0,<2.5.0)", "types-aiobotocore-athena (>=2.4.0,<2.5.0)", "types-aiobotocore-auditmanager (>=2.4.0,<2.5.0)", "types-aiobotocore-autoscaling (>=2.4.0,<2.5.0)", "types-aiobotocore-autoscaling-plans (>=2.4.0,<2.5.0)", "types-aiobotocore-backup (>=2.4.0,<2.5.0)", "types-aiobotocore-backup-gateway (>=2.4.0,<2.5.0)", "types-aiobotocore-backupstorage (>=2.4.0,<2.5.0)", "types-aiobotocore-batch (>=2.4.0,<2.5.0)", "types-aiobotocore-billingconductor (>=2.4.0,<2.5.0)", "types-aiobotocore-braket (>=2.4.0,<2.5.0)", "types-aiobotocore-budgets (>=2.4.0,<2.5.0)", "types-aiobotocore-ce (>=2.4.0,<2.5.0)", "types-aiobotocore-chime (>=2.4.0,<2.5.0)", "types-aiobotocore-chime-sdk-identity (>=2.4.0,<2.5.0)", "types-aiobotocore-chime-sdk-media-pipelines (>=2.4.0,<2.5.0)", "types-aiobotocore-chime-sdk-meetings (>=2.4.0,<2.5.0)", "types-aiobotocore-chime-sdk-messaging (>=2.4.0,<2.5.0)", "types-aiobotocore-cloud9 (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudcontrol (>=2.4.0,<2.5.0)", "types-aiobotocore-clouddirectory (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudformation (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudfront (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudhsm (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudhsmv2 (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudsearch (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudsearchdomain (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudtrail (>=2.4.0,<2.5.0)", "types-aiobotocore-cloudwatch (>=2.4.0,<2.5.0)", "types-aiobotocore-codeartifact (>=2.4.0,<2.5.0)", "types-aiobotocore-codebuild (>=2.4.0,<2.5.0)", "types-aiobotocore-codecommit (>=2.4.0,<2.5.0)", "types-aiobotocore-codedeploy (>=2.4.0,<2.5.0)", "types-aiobotocore-codeguru-reviewer (>=2.4.0,<2.5.0)", "types-aiobotocore-codeguruprofiler (>=2.4.0,<2.5.0)", "types-aiobotocore-codepipeline (>=2.4.0,<2.5.0)", "types-aiobotocore-codestar (>=2.4.0,<2.5.0)", "types-aiobotocore-codestar-connections (>=2.4.0,<2.5.0)", "types-aiobotocore-codestar-notifications (>=2.4.0,<2.5.0)", "types-aiobotocore-cognito-identity (>=2.4.0,<2.5.0)", "types-aiobotocore-cognito-idp (>=2.4.0,<2.5.0)", "types-aiobotocore-cognito-sync (>=2.4.0,<2.5.0)", "types-aiobotocore-comprehend (>=2.4.0,<2.5.0)", "types-aiobotocore-comprehendmedical (>=2.4.0,<2.5.0)", "types-aiobotocore-compute-optimizer (>=2.4.0,<2.5.0)", "types-aiobotocore-config (>=2.4.0,<2.5.0)", "types-aiobotocore-connect (>=2.4.0,<2.5.0)", "types-aiobotocore-connect-contact-lens (>=2.4.0,<2.5.0)", "types-aiobotocore-connectcampaigns (>=2.4.0,<2.5.0)", "types-aiobotocore-connectparticipant (>=2.4.0,<2.5.0)", "types-aiobotocore-cur (>=2.4.0,<2.5.0)", "types-aiobotocore-customer-profiles (>=2.4.0,<2.5.0)", "types-aiobotocore-databrew (>=2.4.0,<2.5.0)", "types-aiobotocore-dataexchange (>=2.4.0,<2.5.0)", "types-aiobotocore-datapipeline (>=2.4.0,<2.5.0)", "types-aiobotocore-datasync (>=2.4.0,<2.5.0)", "types-aiobotocore-dax (>=2.4.0,<2.5.0)", "types-aiobotocore-detective (>=2.4.0,<2.5.0)", "types-aiobotocore-devicefarm (>=2.4.0,<2.5.0)", "types-aiobotocore-devops-guru (>=2.4.0,<2.5.0)", "types-aiobotocore-directconnect (>=2.4.0,<2.5.0)", "types-aiobotocore-discovery (>=2.4.0,<2.5.0)", "types-aiobotocore-dlm (>=2.4.0,<2.5.0)", "types-aiobotocore-dms (>=2.4.0,<2.5.0)", "types-aiobotocore-docdb (>=2.4.0,<2.5.0)", "types-aiobotocore-drs (>=2.4.0,<2.5.0)", "types-aiobotocore-ds (>=2.4.0,<2.5.0)", "types-aiobotocore-dynamodb (>=2.4.0,<2.5.0)", "types-aiobotocore-dynamodbstreams (>=2.4.0,<2.5.0)", "types-aiobotocore-ebs (>=2.4.0,<2.5.0)", "types-aiobotocore-ec2 (>=2.4.0,<2.5.0)", "types-aiobotocore-ec2-instance-connect (>=2.4.0,<2.5.0)", "types-aiobotocore-ecr (>=2.4.0,<2.5.0)", "types-aiobotocore-ecr-public (>=2.4.0,<2.5.0)", "types-aiobotocore-ecs (>=2.4.0,<2.5.0)", "types-aiobotocore-efs (>=2.4.0,<2.5.0)", "types-aiobotocore-eks (>=2.4.0,<2.5.0)", "types-aiobotocore-elastic-inference (>=2.4.0,<2.5.0)", "types-aiobotocore-elasticache (>=2.4.0,<2.5.0)", "types-aiobotocore-elasticbeanstalk (>=2.4.0,<2.5.0)", "types-aiobotocore-elastictranscoder (>=2.4.0,<2.5.0)", "types-aiobotocore-elb (>=2.4.0,<2.5.0)", "types-aiobotocore-elbv2 (>=2.4.0,<2.5.0)", "types-aiobotocore-emr (>=2.4.0,<2.5.0)", "types-aiobotocore-emr-containers (>=2.4.0,<2.5.0)", "types-aiobotocore-emr-serverless (>=2.4.0,<2.5.0)", "types-aiobotocore-es (>=2.4.0,<2.5.0)", "types-aiobotocore-events (>=2.4.0,<2.5.0)", "types-aiobotocore-evidently (>=2.4.0,<2.5.0)", "types-aiobotocore-finspace (>=2.4.0,<2.5.0)", "types-aiobotocore-finspace-data (>=2.4.0,<2.5.0)", "types-aiobotocore-firehose (>=2.4.0,<2.5.0)", "types-aiobotocore-fis (>=2.4.0,<2.5.0)", "types-aiobotocore-fms (>=2.4.0,<2.5.0)", "types-aiobotocore-forecast (>=2.4.0,<2.5.0)", "types-aiobotocore-forecastquery (>=2.4.0,<2.5.0)", "types-aiobotocore-frauddetector (>=2.4.0,<2.5.0)", "types-aiobotocore-fsx (>=2.4.0,<2.5.0)", "types-aiobotocore-gamelift (>=2.4.0,<2.5.0)", "types-aiobotocore-gamesparks (>=2.4.0,<2.5.0)", "types-aiobotocore-glacier (>=2.4.0,<2.5.0)", "types-aiobotocore-globalaccelerator (>=2.4.0,<2.5.0)", "types-aiobotocore-glue (>=2.4.0,<2.5.0)", "types-aiobotocore-grafana (>=2.4.0,<2.5.0)", "types-aiobotocore-greengrass (>=2.4.0,<2.5.0)", "types-aiobotocore-greengrassv2 (>=2.4.0,<2.5.0)", "types-aiobotocore-groundstation (>=2.4.0,<2.5.0)", "types-aiobotocore-guardduty (>=2.4.0,<2.5.0)", "types-aiobotocore-health (>=2.4.0,<2.5.0)", "types-aiobotocore-healthlake (>=2.4.0,<2.5.0)", "types-aiobotocore-honeycode (>=2.4.0,<2.5.0)", "types-aiobotocore-iam (>=2.4.0,<2.5.0)", "types-aiobotocore-identitystore (>=2.4.0,<2.5.0)", "types-aiobotocore-imagebuilder (>=2.4.0,<2.5.0)", "types-aiobotocore-importexport (>=2.4.0,<2.5.0)", "types-aiobotocore-inspector (>=2.4.0,<2.5.0)", "types-aiobotocore-inspector2 (>=2.4.0,<2.5.0)", "types-aiobotocore-iot (>=2.4.0,<2.5.0)", "types-aiobotocore-iot-data (>=2.4.0,<2.5.0)", "types-aiobotocore-iot-jobs-data (>=2.4.0,<2.5.0)", "types-aiobotocore-iot1click-devices (>=2.4.0,<2.5.0)", "types-aiobotocore-secretsmanager (>=2.4.0,<2.5.0)", "types-aiobotocore-iot1click-projects (>=2.4.0,<2.5.0)", "types-aiobotocore-iotanalytics (>=2.4.0,<2.5.0)", "types-aiobotocore-iotdeviceadvisor (>=2.4.0,<2.5.0)", "types-aiobotocore-iotevents (>=2.4.0,<2.5.0)", "types-aiobotocore-iotevents-data (>=2.4.0,<2.5.0)", "types-aiobotocore-iotfleethub (>=2.4.0,<2.5.0)", "types-aiobotocore-iotsecuretunneling (>=2.4.0,<2.5.0)", "types-aiobotocore-iotsitewise (>=2.4.0,<2.5.0)", "types-aiobotocore-iotthingsgraph (>=2.4.0,<2.5.0)", "types-aiobotocore-iottwinmaker (>=2.4.0,<2.5.0)", "types-aiobotocore-iotwireless (>=2.4.0,<2.5.0)", "types-aiobotocore-ivs (>=2.4.0,<2.5.0)", "types-aiobotocore-ivschat (>=2.4.0,<2.5.0)", "types-aiobotocore-kafka (>=2.4.0,<2.5.0)", "types-aiobotocore-kafkaconnect (>=2.4.0,<2.5.0)", "types-aiobotocore-kendra (>=2.4.0,<2.5.0)", "types-aiobotocore-keyspaces (>=2.4.0,<2.5.0)", "types-aiobotocore-kinesis (>=2.4.0,<2.5.0)", "types-aiobotocore-kinesis-video-archived-media (>=2.4.0,<2.5.0)", "types-aiobotocore-kinesis-video-media (>=2.4.0,<2.5.0)", "types-aiobotocore-kinesis-video-signaling (>=2.4.0,<2.5.0)", "types-aiobotocore-kinesisanalytics (>=2.4.0,<2.5.0)", "types-aiobotocore-kinesisanalyticsv2 (>=2.4.0,<2.5.0)", "types-aiobotocore-kinesisvideo (>=2.4.0,<2.5.0)", "types-aiobotocore-kms (>=2.4.0,<2.5.0)", "types-aiobotocore-lakeformation (>=2.4.0,<2.5.0)", "types-aiobotocore-lambda (>=2.4.0,<2.5.0)", "types-aiobotocore-lex-models (>=2.4.0,<2.5.0)", "types-aiobotocore-lex-runtime (>=2.4.0,<2.5.0)", "types-aiobotocore-lexv2-models (>=2.4.0,<2.5.0)", "types-aiobotocore-lexv2-runtime (>=2.4.0,<2.5.0)", "types-aiobotocore-license-manager (>=2.4.0,<2.5.0)", "types-aiobotocore-license-manager-user-subscriptions (>=2.4.0,<2.5.0)", "types-aiobotocore-lightsail (>=2.4.0,<2.5.0)", "types-aiobotocore-location (>=2.4.0,<2.5.0)", "types-aiobotocore-logs (>=2.4.0,<2.5.0)", "types-aiobotocore-lookoutequipment (>=2.4.0,<2.5.0)", "types-aiobotocore-lookoutmetrics (>=2.4.0,<2.5.0)", "types-aiobotocore-lookoutvision (>=2.4.0,<2.5.0)", "types-aiobotocore-m2 (>=2.4.0,<2.5.0)", "types-aiobotocore-machinelearning (>=2.4.0,<2.5.0)", "types-aiobotocore-macie (>=2.4.0,<2.5.0)", "types-aiobotocore-macie2 (>=2.4.0,<2.5.0)", "types-aiobotocore-managedblockchain (>=2.4.0,<2.5.0)", "types-aiobotocore-marketplace-catalog (>=2.4.0,<2.5.0)", "types-aiobotocore-marketplace-entitlement (>=2.4.0,<2.5.0)", "types-aiobotocore-marketplacecommerceanalytics (>=2.4.0,<2.5.0)", "types-aiobotocore-mediaconnect (>=2.4.0,<2.5.0)", "types-aiobotocore-mediaconvert (>=2.4.0,<2.5.0)", "types-aiobotocore-medialive (>=2.4.0,<2.5.0)", "types-aiobotocore-mediapackage (>=2.4.0,<2.5.0)", "types-aiobotocore-mediapackage-vod (>=2.4.0,<2.5.0)", "types-aiobotocore-mediastore (>=2.4.0,<2.5.0)", "types-aiobotocore-mediastore-data (>=2.4.0,<2.5.0)", "types-aiobotocore-mediatailor (>=2.4.0,<2.5.0)", "types-aiobotocore-memorydb (>=2.4.0,<2.5.0)", "types-aiobotocore-meteringmarketplace (>=2.4.0,<2.5.0)", "types-aiobotocore-mgh (>=2.4.0,<2.5.0)", "types-aiobotocore-mgn (>=2.4.0,<2.5.0)", "types-aiobotocore-migration-hub-refactor-spaces (>=2.4.0,<2.5.0)", "types-aiobotocore-migrationhub-config (>=2.4.0,<2.5.0)", "types-aiobotocore-migrationhubstrategy (>=2.4.0,<2.5.0)", "types-aiobotocore-mobile (>=2.4.0,<2.5.0)", "types-aiobotocore-mq (>=2.4.0,<2.5.0)", "types-aiobotocore-mturk (>=2.4.0,<2.5.0)", "types-aiobotocore-mwaa (>=2.4.0,<2.5.0)", "types-aiobotocore-neptune (>=2.4.0,<2.5.0)", "types-aiobotocore-network-firewall (>=2.4.0,<2.5.0)", "types-aiobotocore-networkmanager (>=2.4.0,<2.5.0)", "types-aiobotocore-nimble (>=2.4.0,<2.5.0)", "types-aiobotocore-opensearch (>=2.4.0,<2.5.0)", "types-aiobotocore-opsworks (>=2.4.0,<2.5.0)", "types-aiobotocore-opsworkscm (>=2.4.0,<2.5.0)", "types-aiobotocore-organizations (>=2.4.0,<2.5.0)", "types-aiobotocore-outposts (>=2.4.0,<2.5.0)", "types-aiobotocore-panorama (>=2.4.0,<2.5.0)", "types-aiobotocore-personalize (>=2.4.0,<2.5.0)", "types-aiobotocore-personalize-events (>=2.4.0,<2.5.0)", "types-aiobotocore-personalize-runtime (>=2.4.0,<2.5.0)", "types-aiobotocore-pi (>=2.4.0,<2.5.0)", "types-aiobotocore-pinpoint (>=2.4.0,<2.5.0)", "types-aiobotocore-pinpoint-email (>=2.4.0,<2.5.0)", "types-aiobotocore-pinpoint-sms-voice (>=2.4.0,<2.5.0)", "types-aiobotocore-pinpoint-sms-voice-v2 (>=2.4.0,<2.5.0)", "types-aiobotocore-polly (>=2.4.0,<2.5.0)", "types-aiobotocore-pricing (>=2.4.0,<2.5.0)", "types-aiobotocore-privatenetworks (>=2.4.0,<2.5.0)", "types-aiobotocore-proton (>=2.4.0,<2.5.0)", "types-aiobotocore-qldb (>=2.4.0,<2.5.0)", "types-aiobotocore-qldb-session (>=2.4.0,<2.5.0)", "types-aiobotocore-quicksight (>=2.4.0,<2.5.0)", "types-aiobotocore-ram (>=2.4.0,<2.5.0)", "types-aiobotocore-rbin (>=2.4.0,<2.5.0)", "types-aiobotocore-rds (>=2.4.0,<2.5.0)", "types-aiobotocore-rds-data (>=2.4.0,<2.5.0)", "types-aiobotocore-redshift (>=2.4.0,<2.5.0)", "types-aiobotocore-redshift-data (>=2.4.0,<2.5.0)", "types-aiobotocore-redshift-serverless (>=2.4.0,<2.5.0)", "types-aiobotocore-rekognition (>=2.4.0,<2.5.0)", "types-aiobotocore-resiliencehub (>=2.4.0,<2.5.0)", "types-aiobotocore-resource-groups (>=2.4.0,<2.5.0)", "types-aiobotocore-resourcegroupstaggingapi (>=2.4.0,<2.5.0)", "types-aiobotocore-robomaker (>=2.4.0,<2.5.0)", "types-aiobotocore-rolesanywhere (>=2.4.0,<2.5.0)", "types-aiobotocore-route53 (>=2.4.0,<2.5.0)", "types-aiobotocore-route53-recovery-cluster (>=2.4.0,<2.5.0)", "types-aiobotocore-route53-recovery-control-config (>=2.4.0,<2.5.0)", "types-aiobotocore-route53-recovery-readiness (>=2.4.0,<2.5.0)", "types-aiobotocore-route53domains (>=2.4.0,<2.5.0)", "types-aiobotocore-route53resolver (>=2.4.0,<2.5.0)", "types-aiobotocore-rum (>=2.4.0,<2.5.0)", "types-aiobotocore-s3 (>=2.4.0,<2.5.0)", "types-aiobotocore-s3control (>=2.4.0,<2.5.0)", "types-aiobotocore-s3outposts (>=2.4.0,<2.5.0)", "types-aiobotocore-sagemaker (>=2.4.0,<2.5.0)", "types-aiobotocore-sagemaker-a2i-runtime (>=2.4.0,<2.5.0)", "types-aiobotocore-sagemaker-edge (>=2.4.0,<2.5.0)", "types-aiobotocore-sagemaker-featurestore-runtime (>=2.4.0,<2.5.0)", "types-aiobotocore-sagemaker-runtime (>=2.4.0,<2.5.0)", "types-aiobotocore-savingsplans (>=2.4.0,<2.5.0)", "types-aiobotocore-schemas (>=2.4.0,<2.5.0)", "types-aiobotocore-sdb (>=2.4.0,<2.5.0)", "types-aiobotocore-securityhub (>=2.4.0,<2.5.0)", "types-aiobotocore-serverlessrepo (>=2.4.0,<2.5.0)", "types-aiobotocore-service-quotas (>=2.4.0,<2.5.0)", "types-aiobotocore-servicecatalog (>=2.4.0,<2.5.0)", "types-aiobotocore-servicecatalog-appregistry (>=2.4.0,<2.5.0)", "types-aiobotocore-servicediscovery (>=2.4.0,<2.5.0)", "types-aiobotocore-ses (>=2.4.0,<2.5.0)", "types-aiobotocore-sesv2 (>=2.4.0,<2.5.0)", "types-aiobotocore-shield (>=2.4.0,<2.5.0)", "types-aiobotocore-signer (>=2.4.0,<2.5.0)", "types-aiobotocore-sms (>=2.4.0,<2.5.0)", "types-aiobotocore-sms-voice (>=2.4.0,<2.5.0)", "types-aiobotocore-snow-device-management (>=2.4.0,<2.5.0)", "types-aiobotocore-snowball (>=2.4.0,<2.5.0)", "types-aiobotocore-sns (>=2.4.0,<2.5.0)", "types-aiobotocore-sqs (>=2.4.0,<2.5.0)", "types-aiobotocore-ssm (>=2.4.0,<2.5.0)", "types-aiobotocore-ssm-contacts (>=2.4.0,<2.5.0)", "types-aiobotocore-ssm-incidents (>=2.4.0,<2.5.0)", "types-aiobotocore-sso (>=2.4.0,<2.5.0)", "types-aiobotocore-sso-admin (>=2.4.0,<2.5.0)", "types-aiobotocore-sso-oidc (>=2.4.0,<2.5.0)", "types-aiobotocore-stepfunctions (>=2.4.0,<2.5.0)", "types-aiobotocore-storagegateway (>=2.4.0,<2.5.0)", "types-aiobotocore-sts (>=2.4.0,<2.5.0)", "types-aiobotocore-support (>=2.4.0,<2.5.0)", "types-aiobotocore-support-app (>=2.4.0,<2.5.0)", "types-aiobotocore-swf (>=2.4.0,<2.5.0)", "types-aiobotocore-synthetics (>=2.4.0,<2.5.0)", "types-aiobotocore-textract (>=2.4.0,<2.5.0)", "types-aiobotocore-timestream-query (>=2.4.0,<2.5.0)", "types-aiobotocore-timestream-write (>=2.4.0,<2.5.0)", "types-aiobotocore-transcribe (>=2.4.0,<2.5.0)", "types-aiobotocore-transfer (>=2.4.0,<2.5.0)", "types-aiobotocore-translate (>=2.4.0,<2.5.0)", "types-aiobotocore-voice-id (>=2.4.0,<2.5.0)", "types-aiobotocore-waf (>=2.4.0,<2.5.0)", "types-aiobotocore-waf-regional (>=2.4.0,<2.5.0)", "types-aiobotocore-wafv2 (>=2.4.0,<2.5.0)", "types-aiobotocore-wellarchitected (>=2.4.0,<2.5.0)", "types-aiobotocore-wisdom (>=2.4.0,<2.5.0)", "types-aiobotocore-workdocs (>=2.4.0,<2.5.0)", "types-aiobotocore-worklink (>=2.4.0,<2.5.0)", "types-aiobotocore-workmail (>=2.4.0,<2.5.0)", "types-aiobotocore-workmailmessageflow (>=2.4.0,<2.5.0)", "types-aiobotocore-workspaces (>=2.4.0,<2.5.0)", "types-aiobotocore-workspaces-web (>=2.4.0,<2.5.0)", "types-aiobotocore-xray (>=2.4.0,<2.5.0)"]
amp = ["types-aiobotocore-amp (>=2.4.0,<2.5.0)"]
amplify = ["types-aiobotocore-amplify (>=2.4.0,<2.5.0)"]
amplifybackend = ["types-aiobotocore-amplifybackend (>=2.4.0,<2.5.0)"]
amplifyuibuilder = ["types-aiobotocore-amplifyuibuilder (>=2.4.0,<2.5.0)"]
apigateway = ["types-aiobotocore-apigateway (>=2.4.0,<2.5.0)"]
apigatewaymanagementapi = ["types-aiobotocore-apigatewaymanagementapi (>=2.4.0,<2.5.0)"]
apigatewayv2 = ["types-aiobotocore-apigatewayv2 (>=2.4.0,<2.5.0)"]
appconfig = ["types-aiobotocore-appconfig (>=2.4.0,<2.5.0)"]
appconfigdata = ["types-aiobotocore-appconfigdata (>=2.4.0,<2.5.0)"]
appflow = ["types-aiobotocore-appflow (>=2.4.0,<2.5.0)"]
appintegrations = ["types-aiobotocore-appintegrations (>=2.4.0,<2.5.0)"]
application-autoscaling = ["types-aiobotocore-application-autoscaling (>=2.4.0,<2.5.0)"]
application-insights = ["types-aiobotocore-application-insights (>=2.4.0,<2.5.0)"]
applicationcostprofiler = ["types-aiobotocore-applicationcostprofiler (>=2.4.0,<2.5.0)"]
appmesh = ["types-aiobotocore-appmesh (>=2.4.0,<2.5.0)"]
apprunner = ["types-aiobotocore-apprunner (>=2.4.0,<2.5.0)"]
appstream = ["types-aiobotocore-appstream (>=2.4.0,<2.5.0)"]
appsync = ["types-aiobotocore-appsync (>=2.4.0,<2.5.0)"]
athena = ["types-aiobotocore-athena (>=2.4.0,<2.5.0)"]
auditmanager = ["types-aiobotocore-auditmanager (>=2.4.0,<2.5.0)"]
autoscaling = ["types-aiobotocore-autoscaling (>=2.4.0,<2.5.0)"]
autoscaling-plans = ["types-aiobotocore-autoscaling-plans (>=2.4.0,<2.5.0)"]
backup = ["types-aiobotocore-backup (>=2.4.0,<2.5.0)"]
backup-gateway = ["types-aiobotocore-backup-gateway (>=2.4.0,<2.5.0)"]
backupstorage = ["types-aiobotocore-backupstorage (>=2.4.0,<2.5.0)"]
batch = ["types-aiobotocore-batch (>=2.4.0,<2.5.0)"]
billingconductor = ["types-aiobotocore-billingconductor (>=2.4.0,<2.5.0)"]
braket = ["types-aiobotocore-braket (>=2.4.0,<2.5.0)"]
budgets = ["types-aiobotocore-budgets (>=2.4.0,<2.5.0)"]
ce = ["types-aiobotocore-ce (>=2.4.0,<2.5.0)"]
chime = ["types-aiobotocore-chime (>=2.4.0,<2.5.0)"]
chime-sdk-identity = ["types-aiobotocore-chime-sdk-identity (>=2.4.0,<2.5.0)"]
chime-sdk-media-pipelines = ["types-aiobotocore-chime-sdk-media-pipelines (>=2.4.0,<2.5.0)"]
chime-sdk-meetings = ["types-aiobotocore-chime-sdk-meetings (>=2.4.0,<2.5.0)"]
chime-sdk-messaging = ["types-aiobotocore-chime-sdk-messaging (>=2.4.0,<2.5.0)"]
cloud9 = ["types-aiobotocore-cloud9 (>=2.4.0,<2.5.0)"]
cloudcontrol = ["types-aiobotocore-cloudcontrol (>=2.4.0,<2.5.0)"]
clouddirectory = ["types-aiobotocore-clouddirectory (>=2.4.0,<2.5.0)"]
cloudformation = ["types-aiobotocore-cloudformation (>=2.4.0,<2.5.0)"]
cloudfront = ["types-aiobotocore-cloudfront (>=2.4.0,<2.5.0)"]
cloudhsm = ["types-aiobotocore-cloudhsm (>=2.4.0,<2.5.0)"]
cloudhsmv2 = ["types-aiobotocore-cloudhsmv2 (>=2.4.0,<2.5.0)"]
cloudsearch = ["types-aiobotocore-cloudsearch (>=2.4.0,<2.5.0)"]
cloudsearchdomain = ["types-aiobotocore-cloudsearchdomain (>=2.4.0,<2.5.0)"]
cloudtrail = ["types-aiobotocore-cloudtrail (>=2.4.0,<2.5.0)"]
cloudwatch = ["types-aiobotocore-cloudwatch (>=2.4.0,<2.5.0)"]
codeartifact = ["types-aiobotocore-codeartifact (>=2.4.0,<2.5.0)"]
codebuild = ["types-aiobotocore-codebuild (>=2.4.0,<2.5.0)"]
codecommit = ["types-aiobotocore-codecommit (>=2.4.0,<2.5.0)"]
codedeploy = ["types-aiobotocore-codedeploy (>=2.4.0,<2.5.0)"]
codeguru-reviewer = ["types-aiobotocore-codeguru-reviewer (>=2.4.0,<2.5.0)"]
codeguruprofiler = ["types-aiobotocore-codeguruprofiler (>=2.4.0,<2.5.0)"]
codepipeline = ["types-aiobotocore-codepipeline (>=2.4.0,<2.5.0)"]
codestar = ["types-aiobotocore-codestar (>=2.4.0,<2.5.0)"]
codestar-connections = ["types-aiobotocore-codestar-connections (>=2.4.0,<2.5.0)"]
codestar-notifications = ["types-aiobotocore-codestar-notifications (>=2.4.0,<2.5.0)"]
cognito-identity = ["types-aiobotocore-cognito-identity (>=2.4.0,<2.5.0)"]
cognito-idp = ["types-aiobotocore-cognito-idp (>=2.4.0,<2.5.0)"]
cognito-sync = ["types-aiobotocore-cognito-sync (>=2.4.0,<2.5.0)"]
comprehend = ["types-aiobotocore-comprehend (>=2.4.0,<2.5.0)"]
comprehendmedical = ["types-aiobotocore-comprehendmedical (>=2.4.0,<2.5.0)"]
compute-optimizer = ["types-aiobotocore-compute-optimizer (>=2.4.0,<2.5.0)"]
config = ["types-aiobotocore-config (>=2.4.0,<2.5.0)"]
connect = ["types-aiobotocore-connect (>=2.4.0,<2.5.0)"]
connect-contact-lens = ["types-aiobotocore-connect-contact-lens (>=2.4.0,<2.5.0)"]
connectcampaigns = ["types-aiobotocore-connectcampaigns (>=2.4.0,<2.5.0)"]
connectparticipant = ["types-aiobotocore-connectparticipant (>=2.4.0,<2.5.0)"]
cur = ["types-aiobotocore-cur (>=2.4.0,<2.5.0)"]
customer-profiles = ["types-aiobotocore-customer-profiles (>=2.4.0,<2.5.0)"]
databrew = ["types-aiobotocore-databrew (>=2.4.0,<2.5.0)"]
dataexchange = ["types-aiobotocore-dataexchange (>=2.4.0,<2.5.0)"]
datapipeline = ["types-aiobotocore-datapipeline (>=2.4.0,<2.5.0)"]
datasync = ["types-aiobotocore-datasync (>=2.4.0,<2.5.0)"]
dax = ["types-aiobotocore-dax (>=2.4.0,<2.5.0)"]
detective = ["types-aiobotocore-detective (>=2.4.0,<2.5.0)"]
devicefarm = ["types-aiobotocore-devicefarm (>=2.4.0,<2.5.0)"]
devops-guru = ["types-aiobotocore-devops-guru (>=2.4.0,<2.5.0)"]
directconnect = ["types-aiobotocore-directconnect (>=2.4.0,<2.5.0)"]
discovery = ["types-aiobotocore-discovery (>=2.4.0,<2.5.0)"]
dlm = ["types-aiobotocore-dlm (>=2.4.0,<2.5.0)"]
dms = ["types-aiobotocore-dms (>=2.4.0,<2.5.0)"]
docdb = ["types-aiobotocore-docdb (>=2.4.0,<2.5.0)"]
drs = ["types-aiobotocore-drs (>=2.4.0,<2.5.0)"]
ds = ["types-aiobotocore-ds (>=2.4.0,<2.5.0)"]
dynamodb = ["types-aiobotocore-dynamodb (>=2.4.0,<2.5.0)"]
dynamodbstreams = ["types-aiobotocore-dynamodbstreams (>=2.4.0,<2.5.0)"]
ebs = ["types-aiobotocore-ebs (>=2.4.0,<2.5.0)"]
ec2 = ["types-aiobotocore-ec2 (>=2.4.0,<2.5.0)"]
ec2-instance-connect = ["types-aiobotocore-ec2-instance-connect (>=2.4.0,<2.5.0)"]
ecr = ["types-aiobotocore-ecr (>=2.4.0,<2.5.0)"]
ecr-public = ["types-aiobotocore-ecr-public (>=2.4.0,<2.5.0)"]
ecs = ["types-aiobotocore-ecs (>=2.4.0,<2.5.0)"]
efs = ["types-aiobotocore-efs (>=2.4.0,<2.5.0)"]
eks = ["types-aiobotocore-eks (>=2.4.0,<2.5.0)"]
elastic-inference = ["types-aiobotocore-elastic-inference (>=2.4.0,<2.5.0)"]
elasticache = ["types-aiobotocore-elasticache (>=2.4.0,<2.5.0)"]
elasticbeanstalk = ["types-aiobotocore-elasticbeanstalk (>=2.4.0,<2.5.0)"]
elastictranscoder = ["types-aiobotocore-elastictranscoder (>=2.4.0,<2.5.0)"]
elb = ["types-aiobotocore-elb (>=2.4.0,<2.5.0)"]
elbv2 = ["types-aiobotocore-elbv2 (>=2.4.0,<2.5.0)"]
emr = ["types-aiobotocore-emr (>=2.4.0,<2.5.0)"]
emr-containers = ["types-aiobotocore-emr-containers (>=2.4.0,<2.5.0)"]
emr-serverless = ["types-aiobotocore-emr-serverless (>=2.4.0,<2.5.0)"]
es = ["types-aiobotocore-es (>=2.4.0,<2.5.0)"]
essential = ["types-aiobotocore-cloudformation (>=2.4.0,<2.5.0)", "types-aiobotocore-dynamodb (>=2.4.0,<2.5.0)", "types-aiobotocore-ec2 (>=2.4.0,<2.5.0)", "types-aiobotocore-lambda (>=2.4.0,<2.5.0)", "types-aiobotocore-rds (>=2.4.0,<2.5.0)", "types-aiobotocore-s3 (>=2.4.0,<2.5.0)", "types-aiobotocore-sqs (>=2.4.0,<2.5.0)"]
events = ["types-aiobotocore-events (>=2.4.0,<2.5.0)"]
evidently = ["types-aiobotocore-evidently (>=2.4.0,<2.5.0)"]
finspace = ["types-aiobotocore-finspace (>=2.4.0,<2.5.0)"]
finspace-data = ["types-aiobotocore-finspace-data (>=2.4.0,<2.5.0)"]
firehose = ["types-aiobotocore-firehose (>=2.4.0,<2.5.0)"]
fis = ["types-aiobotocore-fis (>=2.4.0,<2.5.0)"]
fms = ["types-aiobotocore-fms (>=2.4.0,<2.5.0)"]
forecast = ["types-aiobotocore-forecast (>=2.4.0,<2.5.0)"]
forecastquery = ["types-aiobotocore-forecastquery (>=2.4.0,<2.5.0)"]
frauddetector = ["types-aiobotocore-frauddetector (>=2.4.0,<2.5.0)"]
fsx = ["types-aiobotocore-fsx (>=2.4.0,<2.5.0)"]
gamelift = ["types-aiobotocore-gamelift (>=2.4.0,<2.5.0)"]
gamesparks = ["types-aiobotocore-gamesparks (>=2.4.0,<2.5.0)"]
glacier = ["types-aiobotocore-glacier (>=2.4.0,<2.5.0)"]
globalaccelerator = ["types-aiobotocore-globalaccelerator (>=2.4.0,<2.5.0)"]
glue = ["types-aiobotocore-glue (>=2.4.0,<2.5.0)"]
grafana = ["types-aiobotocore-grafana (>=2.4.0,<2.5.0)"]
greengrass = ["types-aiobotocore-greengrass (>=2.4.0,<2.5.0)"]
greengrassv2 = ["types-aiobotocore-greengrassv2 (>=2.4.0,<2.5.0)"]
groundstation = ["types-aiobotocore-groundstation (>=2.4.0,<2.5.0)"]
guardduty = ["types-aiobotocore-guardduty (>=2.4.0,<2.5.0)"]
health = ["types-aiobotocore-health (>=2.4.0,<2.5.0)"]
healthlake = ["types-aiobotocore-healthlake (>=2.4.0,<2.5.0)"]
honeycode = ["types-aiobotocore-honeycode (>=2.4.0,<2.5.0)"]
iam = ["types-aiobotocore-iam (>=2.4.0,<2.5.0)"]
identitystore = ["types-aiobotocore-identitystore (>=2.4.0,<2.5.0)"]
imagebuilder = ["types-aiobotocore-imagebuilder (>=2.4.0,<2.5.0)"]
importexport = ["types-aiobotocore-importexport (>=2.4.0,<2.5.0)"]
inspector = ["types-aiobotocore-inspector (>=2.4.0,<2.5.0)"]
inspector2 = ["types-aiobotocore-inspector2 (>=2.4.0,<2.5.0)"]
iot = ["types-aiobotocore-iot (>=2.4.0,<2.5.0)"]
iot-data = ["types-aiobotocore-iot-data (>=2.4.0,<2.5.0)"]
iot-jobs-data = ["types-aiobotocore-iot-jobs-data (>=2.4.0,<2.5.0)"]
iot1click-devices = ["types-aiobotocore-iot1click-devices (>=2.4.0,<2.5.0)"]
iot1click-projects = ["types-aiobotocore-iot1click-projects (>=2.4.0,<2.5.0)"]
iotanalytics = ["types-aiobotocore-iotanalytics (>=2.4.0,<2.5.0)"]
iotdeviceadvisor = ["types-aiobotocore-iotdeviceadvisor (>=2.4.0,<2.5.0)"]
iotevents = ["types-aiobotocore-iotevents (>=2.4.0,<2.5.0)"]
iotevents-data = ["types-aiobotocore-iotevents-data (>=2.4.0,<2.5.0)"]
iotfleethub = ["types-aiobotocore-iotfleethub (>=2.4.0,<2.5.0)"]
iotsecuretunneling = ["types-aiobotocore-iotsecuretunneling (>=2.4.0,<2.5.0)"]
iotsitewise = ["types-aiobotocore-iotsitewise (>=2.4.0,<2.5.0)"]
iotthingsgraph = ["types-aiobotocore-iotthingsgraph (>=2.4.0,<2.5.0)"]
iottwinmaker = ["types-aiobotocore-iottwinmaker (>=2.4.0,<2.5.0)"]
iotwireless = ["types-aiobotocore-iotwireless (>=2.4.0,<2.5.0)"]
ivs = ["types-aiobotocore-ivs (>=2.4.0,<2.5.0)"]
ivschat = ["types-aiobotocore-ivschat (>=2.4.0,<2.5.0)"]
kafka = ["types-aiobotocore-kafka (>=2.4.0,<2.5.0)"]
kafkaconnect = ["types-aiobotocore-kafkaconnect (>=2.4.0,<2.5.0)"]
kendra = ["types-aiobotocore-kendra (>=2.4.0,<2.5.0)"]
keyspaces = ["types-aiobotocore-keyspaces (>=2.4.0,<2.5.0)"]
kinesis = ["types-aiobotocore-kinesis (>=2.4.0,<2.5.0)"]
kinesis-video-archived-media = ["types-aiobotocore-kinesis-video-archived-media (>=2.4.0,<2.5.0)"]
kinesis-video-media = ["types-aiobotocore-kinesis-video-media (>=2.4.0,<2.5.0)"]
kinesis-video-signaling = ["types-aiobotocore-kinesis-video-signaling (>=2.4.0,<2.5.0)"]
kinesisanalytics = ["types-aiobotocore-kinesisanalytics (>=2.4.0,<2.5.0)"]
kinesisanalyticsv2 = ["types-aiobotocore-kinesisanalyticsv2 (>=2.4.0,<2.5.0)"]
kinesisvideo = ["types-aiobotocore-kinesisvideo (>=2.4.0,<2.5.0)"]
kms = ["types-aiobotocore-kms (>=2.4.0,<2.5.0)"]
lakeformation = ["types-aiobotocore-lakeformation (>=2.4.0,<2.5.0)"]
lambda = ["types-aiobotocore-lambda (>=2.4.0,<2.5.0)"]
lex-models = ["types-aiobotocore-lex-models (>=2.4.0,<2.5.0)"]
lex-runtime = ["types-aiobotocore-lex-runtime (>=2.4.0,<2.5.0)"]
lexv2-models = ["types-aiobotocore-lexv2-models (>=2.4.0,<2.5.0)"]
lexv2-runtime = ["types-aiobotocore-lexv2-runtime (>=2.4.0,<2.5.0)"]
license-manager = ["types-aiobotocore-license-manager (>=2.4.0,<2.5.0)"]
license-manager-user-subscriptions = ["types-aiobotocore-license-manager-user-subscriptions (>=2.4.0,<2.5.0)"]
lightsail = ["types-aiobotocore-lightsail (>=2.4.0,<2.5.0)"]
location = ["types-aiobotocore-location (>=2.4.0,<2.5.0)"]
logs = ["types-aiobotocore-logs (>=2.4.0,<2.5.0)"]
lookoutequipment = ["types-aiobotocore-lookoutequipment (>=2.4.0,<2.5.0)"]
lookoutmetrics = ["types-aiobotocore-lookoutmetrics (>=2.4.0,<2.5.0)"]
lookoutvision = ["types-aiobotocore-lookoutvision (>=2.4.0,<2.5.0)"]
m2 = ["types-aiobotocore-m2 (>=2.4.0,<2.5.0)"]
machinelearning = ["types-aiobotocore-machinelearning (>=2.4.0,<2.5.0)"]
macie = ["types-aiobotocore-macie (>=2.4.0,<2.5.0)"]
macie2 = ["types-aiobotocore-macie2 (>=2.4.0,<2.5.0)"]
managedblockchain = ["types-aiobotocore-managedblockchain (>=2.4.0,<2.5.0)"]
marketplace-catalog = ["types-aiobotocore-marketplace-catalog (>=2.4.0,<2.5.0)"]
marketplace-entitlement = ["types-aiobotocore-marketplace-entitlement (>=2.4.0,<2.5.0)"]
marketplacecommerceanalytics = ["types-aiobotocore-marketplacecommerceanalytics (>=2.4.0,<2.5.0)"]
mediaconnect = ["types-aiobotocore-mediaconnect (>=2.4.0,<2.5.0)"]
mediaconvert = ["types-aiobotocore-mediaconvert (>=2.4.0,<2.5.0)"]
medialive = ["types-aiobotocore-medialive (>=2.4.0,<2.5.0)"]
mediapackage = ["types-aiobotocore-mediapackage (>=2.4.0,<2.5.0)"]
mediapackage-vod = ["types-aiobotocore-mediapackage-vod (>=2.4.0,<2.5.0)"]
mediastore = ["types-aiobotocore-mediastore (>=2.4.0,<2.5.0)"]
mediastore-data = ["types-aiobotocore-mediastore-data (>=2.4.0,<2.5.0)"]
mediatailor = ["types-aiobotocore-mediatailor (>=2.4.0,<2.5.0)"]
memorydb = ["types-aiobotocore-memorydb (>=2.4.0,<2.5.0)"]
meteringmarketplace = ["types-aiobotocore-meteringmarketplace (>=2.4.0,<2.5.0)"]
mgh = ["types-aiobotocore-mgh (>=2.4.0,<2.5.0)"]
mgn = ["types-aiobotocore-mgn (>=2.4.0,<2.5.0)"]
migration-hub-refactor-spaces = ["types-aiobotocore-migration-hub-refactor-spaces (>=2.4.0,<2.5.0)"]
migrationhub-config = ["types-aiobotocore-migrationhub-config (>=2.4.0,<2.5.0)"]
migrationhubstrategy = ["types-aiobotocore-migrationhubstrategy (>=2.4.0,<2.5.0)"]
mobile = ["types-aiobotocore-mobile (>=2.4.0,<2.5.0)"]
mq = ["types-aiobotocore-mq (>=2.4.0,<2.5.0)"]
mturk = ["types-aiobotocore-mturk (>=2.4.0,<2.5.0)"]
mwaa = ["types-aiobotocore-mwaa (>=2.4.0,<2.5.0)"]
neptune = ["types-aiobotocore-neptune (>=2.4.0,<2.5.0)"]
network-firewall = ["types-aiobotocore-network-firewall (>=2.4.0,<2.5.0)"]
networkmanager = ["types-aiobotocore-networkmanager (>=2.4.0,<2.5.0)"]
nimble = ["types-aiobotocore-nimble (>=2.4.0,<2.5.0)"]
opensearch = ["types-aiobotocore-opensearch (>=2.4.0,<2.5.0)"]
opsworks = ["types-aiobotocore-opsworks (>=2.4.0,<2.5.0)"]
opsworkscm = ["types-aiobotocore-opsworkscm (>=2.4.0,<2.5.0)"]
organizations = ["types-aiobotocore-organizations (>=2.4.0,<2.5.0)"]
outposts = ["types-aiobotocore-outposts (>=2.4.0,<2.5.0)"]
panorama = ["types-aiobotocore-panorama (>=2.4.0,<2.5.0)"]
personalize = ["types-aiobotocore-personalize (>=2.4.0,<2.5.0)"]
personalize-events = ["types-aiobotocore-personalize-events (>=2.4.0,<2.5.0)"]
personalize-runtime = ["types-aiobotocore-personalize-runtime (>=2.4.0,<2.5.0)"]
pi = ["types-aiobotocore-pi (>=2.4.0,<2.5.0)"]
pinpoint = ["types-aiobotocore-pinpoint (>=2.4.0,<2.5.0)"]
pinpoint-email = ["types-aiobotocore-pinpoint-email (>=2.4.0,<2.5.0)"]
pinpoint-sms-voice = ["types-aiobotocore-pinpoint-sms-voice (>=2.4.0,<2.5.0)"]
pinpoint-sms-voice-v2 = ["types-aiobotocore-pinpoint-sms-voice-v2 (>=2.4.0,<2.5.0)"]
polly = ["types-aiobotocore-polly (>=2.4.0,<2.5.0)"]
pricing = ["types-aiobotocore-pricing (>=2.4.0,<2.5.0)"]
privatenetworks = ["types-aiobotocore-privatenetworks (>=2.4.0,<2.5.0)"]
proton = ["types-aiobotocore-proton (>=2.4.0,<2.5.0)"]
qldb = ["types-aiobotocore-qldb (>=2.4.0,<2.5.0)"]
qldb-session = ["types-aiobotocore-qldb-session (>=2.4.0,<2.5.0)"]
quicksight = ["types-aiobotocore-quicksight (>=2.4.0,<2.5.0)"]
ram = ["types-aiobotocore-ram (>=2.4.0,<2.5.0)"]
rbin = ["types-aiobotocore-rbin (>=2.4.0,<2.5.0)"]
rds = ["types-aiobotocore-rds (>=2.4.0,<2.5.0)"]
rds-data = ["types-aiobotocore-rds-data (>=2.4.0,<2.5.0)"]
redshift = ["types-aiobotocore-redshift (>=2.4.0,<2.5.0)"]
redshift-data = ["types-aiobotocore-redshift-data (>=2.4.0,<2.5.0)"]
redshift-serverless = ["types-aiobotocore-redshift-serverless (>=2.4.0,<2.5.0)"]
rekognition = ["types-aiobotocore-rekognition (>=2.4.0,<2.5.0)"]
resiliencehub = ["types-aiobotocore-resiliencehub (>=2.4.0,<2.5.0)"]
resource-groups = ["types-aiobotocore-resource-groups (>=2.4.0,<2.5.0)"]
resourcegroupstaggingapi = ["types-aiobotocore-resourcegroupstaggingapi (>=2.4.0,<2.5.0)"]
robomaker = ["types-aiobotocore-robomaker (>=2.4.0,<2.5.0)"]
rolesanywhere = ["types-aiobotocore-rolesanywhere (>=2.4.0,<2.5.0)"]
route53 = ["types-aiobotocore-route53 (>=2.4.0,<2.5.0)"]
route53-recovery-cluster = ["types-aiobotocore-route53-recovery-cluster (>=2.4.0,<2.5.0)"]
route53-recovery-control-config = ["types-aiobotocore-route53-recovery-control-config (>=2.4.0,<2.5.0)"]
route53-recovery-readiness = ["types-aiobotocore-route53-recovery-readiness (>=2.4.0,<2.5.0)"]
route53domains = ["types-aiobotocore-route53domains (>=2.4.0,<2.5.0)"]
route53resolver = ["types-aiobotocore-route53resolver (>=2.4.0,<2.5.0)"]
rum = ["types-aiobotocore-rum (>=2.4.0,<2.5.0)"]
s3 = ["types-aiobotocore-s3 (>=2.4.0,<2.5.0)"]
s3control = ["types-aiobotocore-s3control (>=2.4.0,<2.5.0)"]
s3outposts = ["types-aiobotocore-s3outposts (>=2.4.0,<2.5.0)"]
sagemaker = ["types-aiobotocore-sagemaker (>=2.4.0,<2.5.0)"]
sagemaker-a2i-runtime = ["types-aiobotocore-sagemaker-a2i-runtime (>=2.4.0,<2.5.0)"]
sagemaker-edge = ["types-aiobotocore-sagemaker-edge (>=2.4.0,<2.5.0)"]
sagemaker-featurestore-runtime = ["types-aiobotocore-sagemaker-featurestore-runtime (>=2.4.0,<2.5.0)"]
sagemaker-runtime = ["types-aiobotocore-sagemaker-runtime (>=2.4.0,<2.5.0)"]
savingsplans = ["types-aiobotocore-savingsplans (>=2.4.0,<2.5.0)"]
schemas = ["types-aiobotocore-schemas (>=2.4.0,<2.5.0)"]
sdb = ["types-aiobotocore-sdb (>=2.4.0,<2.5.0)"]
secretsmanager = ["types-aiobotocore-secretsmanager (>=2.4.0,<2.5.0)"]
securityhub = ["types-aiobotocore-securityhub (>=2.4.0,<2.5.0)"]
serverlessrepo = ["types-aiobotocore-serverlessrepo (>=2.4.0,<2.5.0)"]
service-quotas = ["types-aiobotocore-service-quotas (>=2.4.0,<2.5.0)"]
servicecatalog = ["types-aiobotocore-servicecatalog (>=2.4.0,<2.5.0)"]
servicecatalog-appregistry = ["types-aiobotocore-servicecatalog-appregistry (>=2.4.0,<2.5.0)"]
servicediscovery = ["types-aiobotocore-servicediscovery (>=2.4.0,<2.5.0)"]
ses = ["types-aiobotocore-ses (>=2.4.0,<2.5.0)"]
sesv2 = ["types-aiobotocore-sesv2 (>=2.4.0,<2.5.0)"]
shield = ["types-aiobotocore-shield (>=2.4.0,<2.5.0)"]
signer = ["types-aiobotocore-signer (>=2.4.0,<2.5.0)"]
sms = ["types-aiobotocore-sms (>=2.4.0,<2.5.0)"]
sms-voice = ["types-aiobotocore-sms-voice (>=2.4.0,<2.5.0)"]
snow-device-management = ["types-aiobotocore-snow-device-management (>=2.4.0,<2.5.0)"]
snowball = ["types-aiobotocore-snowball (>=2.4.0,<2.5.0)"]
sns = ["types-aiobotocore-sns (>=2.4.0,<2.5.0)"]
sqs = ["types-aiobotocore-sqs (>=2.4.0,<2.5.0)"]
ssm = ["types-aiobotocore-ssm (>=2.4.0,<2.5.0)"]
ssm-contacts = ["types-aiobotocore-ssm-contacts (>=2.4.0,<2.5.0)"]
ssm-incidents = ["types-aiobotocore-ssm-incidents (>=2.4.0,<2.5.0)"]
sso = ["types-aiobotocore-sso (>=2.4.0,<2.5.0)"]
sso-admin = ["types-aiobotocore-sso-admin (>=2.4.0,<2.5.0)"]
sso-oidc = ["types-aiobotocore-sso-oidc (>=2.4.0,<2.5.0)"]
stepfunctions = ["types-aiobotocore-stepfunctions (>=2.4.0,<2.5.0)"]
storagegateway = ["types-aiobotocore-storagegateway (>=2.4.0,<2.5.0)"]
sts = ["types-aiobotocore-sts (>=2.4.0,<2.5.0)"]
support = ["types-aiobotocore-support (>=2.4.0,<2.5.0)"]
support-app = ["types-aiobotocore-support-app (>=2.4.0,<2.5.0)"]
swf = ["types-aiobotocore-swf (>=2.4.0,<2.5.0)"]
synthetics = ["types-aiobotocore-synthetics (>=2.4.0,<2.5.0)"]
textract = ["types-aiobotocore-textract (>=2.4.0,<2.5.0)"]
timestream-query = ["types-aiobotocore-timestream-query (>=2.4.0,<2.5.0)"]
timestream-write = ["types-aiobotocore-timestream-write (>=2.4.0,<2.5.0)"]
transcribe = ["types-aiobotocore-transcribe (>=2.4.0,<2.5.0)"]
transfer = ["types-aiobotocore-transfer (>=2.4.0,<2.5.0)"]
translate = ["types-aiobotocore-translate (>=2.4.0,<2.5.0)"]
voice-id = ["types-aiobotocore-voice-id (>=2.4.0,<2.5.0)"]
waf = ["types-aiobotocore-waf (>=2.4.0,<2.5.0)"]
waf-regional = ["types-aiobotocore-waf-regional (>=2.4.0,<2.5.0)"]
wafv2 = ["types-aiobotocore-wafv2 (>=2.4.0,<2.5.0)"]
wellarchitected = ["types-aiobotocore-wellarchitected (>=2.4.0,<2.5.0)"]
wisdom = ["types-aiobotocore-wisdom (>=2.4.0,<2.5.0)"]
workdocs = ["types-aiobotocore-workdocs (>=2.4.0,<2.5.0)"]
worklink = ["types-aiobotocore-worklink (>=2.4.0,<2.5.0)"]
workmail = ["types-aiobotocore-workmail (>=2.4.0,<2.5.0)"]
workmailmessageflow = ["types-aiobotocore-workmailmessageflow (>=2.4.0,<2.5.0)"]
workspaces = ["types-aiobotocore-workspaces (>=2.4.0,<2.5.0)"]
workspaces-web = ["types-aiobotocore-workspaces-web (>=2.4.0,<2.5.0)"]
xray = ["types-aiobotocore-xray (>=2.4.0,<2.5.0)"]

[[package]]
name = "types-aiobotocore-cloudformation"
version = "2.4.0"
description = "Type annotations for aiobotocore.CloudFormation 2.4.0 service generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "types-aiobotocore-dynamodb"
version = "2.4.0"
description = "Type annotations for aiobotocore.DynamoDB 2.4.0 service generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "types-aiobotocore-ec2"
version = "2.4.0"
description = "Type annotations for aiobotocore.EC2 2.4.0 service generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "types-aiobotocore-lambda"
version = "2.4.0"
description = "Type annotations for aiobotocore.Lambda 2.4.0 service generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "types-aiobotocore-rds"
version = "2.4.0"
description = "Type annotations for aiobotocore.RDS 2.4.0 service generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "types-aiobotocore-s3"
version = "2.4.0"
description = "Type annotations for aiobotocore.S3 2.4.0 service generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "types-aiobotocore-sqs"
version = "2.4.0"
description = "Type annotations for aiobotocore.SQS 2.4.0 service generated with mypy-boto3-builder 7.11.8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "types-awscrt"
version = "0.14.0"
description = "Type annotations and code completion for awscrt"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "types-redis"
version = "4.3.18"
description = "Typing stubs for redis"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "types-requests"
version = "2.28.9"
description = "Typing stubs for requests"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
types-urllib3 = "<1.27"

[[package]]
name = "types-urllib3"
version = "1.26.23"
description = "Typing stubs for urllib3"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "typing-extensions"
version = "4.3.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tzdata"
version = "2022.2"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "tzlocal"
version = "4.2"
description = "tzinfo object for the local timezone"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
"backports.zoneinfo" = {version = "*", markers = "python_version < \"3.9\""}
pytz-deprecation-shim = "*"
tzdata = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
test = ["pytest (>=4.3)", "pytest-mock (>=3.3)"]
devenv = ["zest.releaser", "pytest-cov", "pyroma", "black"]

[[package]]
name = "urllib3"
version = "1.26.12"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "virtualenv"
version = "20.16.3"
description = "Virtual Python Environment builder"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
distlib = ">=0.3.5,<1"
filelock = ">=3.4.1,<4"
importlib-metadata = {version = ">=4.8.3", markers = "python_version < \"3.8\""}
platformdirs = ">=2.4,<3"

[package.extras]
docs = ["proselint (>=0.13)", "sphinx (>=5.1.1)", "sphinx-argparse (>=0.3.1)", "sphinx-rtd-theme (>=1)", "towncrier (>=21.9)"]
testing = ["coverage (>=6.2)", "coverage-enable-subprocess (>=1)", "flaky (>=3.7)", "packaging (>=21.3)", "pytest (>=7.0.1)", "pytest-env (>=0.6.2)", "pytest-freezegun (>=0.4.2)", "pytest-mock (>=3.6.1)", "pytest-randomly (>=3.10.3)", "pytest-timeout (>=2.1)"]

[[package]]
name = "watchdog"
version = "2.1.9"
description = "Filesystem events monitoring"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
watchmedo = ["PyYAML (>=3.10)"]

[[package]]
name = "wrapt"
version = "1.14.1"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "yarl"
version = "1.8.1"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"
typing-extensions = {version = ">=3.7.4", markers = "python_version < \"3.8\""}

[[package]]
name = "zipp"
version = "3.8.1"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[extras]
dynamodb = ["aioboto3"]
redis = ["redis", "hiredis"]

[metadata]
lock-version = "1.1"
python-versions = "^3.7"
content-hash = "b99144041df74717e8cb166f379f099a609eb320fd0d0e38a982f13caa9f0f2c"

[metadata.files]
aioboto3 = []
aiobotocore = []
aiohttp = []
aioitertools = []
aiosignal = []
anyio = []
apscheduler = []
args = []
async-timeout = []
asynctest = []
atomicwrites = []
attrs = []
"backports.zoneinfo" = []
black = []
blinker-alt = []
boto3 = []
botocore = []
botocore-stubs = []
cached-property = []
certifi = []
cfgv = []
charset-normalizer = []
click = []
clint = []
colorama = []
coverage = []
dacite = []
deprecated = []
dill = []
distlib = []
filelock = []
flake8 = []
frozenlist = []
ghp-import = []
griffe = []
h11 = []
hiredis = []
httpcore = []
httpx = []
identify = []
idna = []
importlib-metadata = []
importlib-resources = []
iniconfig = []
isort = []
jinja2 = []
jmespath = []
markdown = []
markupsafe = []
mccabe = []
mergedeep = []
mkdocs = []
mkdocs-autorefs = []
mkdocs-material = []
mkdocs-material-extensions = []
mkdocstrings = []
mkdocstrings-python = []
mock = []
multidict = []
mypy = []
mypy-extensions = []
nodeenv = []
packaging = []
pathspec = []
platformdirs = []
pluggy = []
pre-commit = []
py = []
pycodestyle = []
pyee = []
pyflakes = []
pygments = []
pymdown-extensions = []
pyparsing = []
pytest = []
pytest-asyncio = []
pytest-cov = []
pytest-mock = []
python-dateutil = []
pytz = []
pytz-deprecation-shim = []
pyyaml = []
pyyaml-env-tag = []
redis = []
requests = []
rfc3986 = []
s3transfer = []
six = []
slack-sdk = []
sniffio = []
toml = []
tomli = []
tox = []
tox-gh-actions = []
typed-ast = []
types-aiobotocore = []
types-aiobotocore-cloudformation = []
types-aiobotocore-dynamodb = []
types-aiobotocore-ec2 = []
types-aiobotocore-lambda = []
types-aiobotocore-rds = []
types-aiobotocore-s3 = []
types-aiobotocore-sqs = []
types-awscrt = []
types-redis = []
types-requests = []
types-urllib3 = []
typing-extensions = []
tzdata = []
tzlocal = []
urllib3 = []
virtualenv = []
watchdog = []
wrapt = []
yarl = []
zipp = []
